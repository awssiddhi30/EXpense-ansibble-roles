- name: disabling nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: absent

- name: enable nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: present
    
- name: install nodejs
  ansible.builtin.dnf:
    name: "{{ item }}" 
    state: present
  loop:
  - nodejs
  - mysql

- name: Create a directory 
  ansible.builtin.file:
    path: "{{ APP_LOCAION }}"
    state: directory 
- name: creat useradd expense
  ansible.builtin.user:
    name: expense
    state: present
- name: Download application
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: Unarchive a file 
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: "{{ APP_LOCAION }}"
    remote_src: yes

- name: Install dependencies
  community.general.npm:
    name: npm
    path: /app

- name: setup expense backend server
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install python libs
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
  - PyMySQL
  - cryptography

- name: import sql data
  community.mysql.mysql_db:
    state: import
    name: all
    login_host: "{{ host_name }}"
    login_user: "{{ user }}"
    login_password: "{{ password }}"
    target: /app/schema/backend.sql

- name: daemon reload and restart service
  ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend